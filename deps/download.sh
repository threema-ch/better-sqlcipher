#!/usr/bin/env bash
set -euo pipefail

BEARSSL_VERSION=$(grep bearssl_version common.gypi | sed -E "s/.*: '([^']+)'.*/\1/")
SQLCIPHER_VERSION=$(grep sqlcipher_version common.gypi | sed -E "s/.*: '([^']+)'.*/\1/")

BEARSSL_URL="https://www.bearssl.org/bearssl-${BEARSSL_VERSION}.tar.gz"
SQLCIPHER_REPO="git@git.threema.ch:clients/web/sqlcipher.git"

DEFINES="
HAVE_INT16_T=1
HAVE_INT32_T=1
HAVE_INT8_T=1
HAVE_STDINT_H=1
HAVE_UINT16_T=1
HAVE_UINT32_T=1
HAVE_UINT8_T=1
HAVE_USLEEP=1
SQLCIPHER_CRYPTO_BEARSSL
SQLITE_DEFAULT_CACHE_SIZE=-16000
SQLITE_DEFAULT_FOREIGN_KEYS=1
SQLITE_DEFAULT_MEMSTATUS=0
SQLITE_DEFAULT_WAL_SYNCHRONOUS=1
SQLITE_DQS=0
SQLITE_ENABLE_COLUMN_METADATA
SQLITE_ENABLE_DESERIALIZE
SQLITE_ENABLE_FTS5
SQLITE_ENABLE_JSON1
SQLITE_ENABLE_MATH_FUNCTIONS
SQLITE_ENABLE_STAT4
SQLITE_ENABLE_UPDATE_DELETE_LIMIT
SQLITE_HAS_CODEC
SQLITE_LIKE_DOESNT_MATCH_BLOBS
SQLITE_OMIT_DEPRECATED
SQLITE_OMIT_GET_TABLE
SQLITE_OMIT_PROGRESS_CALLBACK
SQLITE_OMIT_SHARED_CACHE
SQLITE_OMIT_TCL_VARIABLE
SQLITE_SECURE_DELETE
SQLITE_TEMP_STORE=3
SQLITE_THREADSAFE=2
SQLITE_TRACE_SIZE_LIMIT=32
SQLITE_USE_URI=0
"

GREEN="\033[0;32m"
RESET="\033[0m"
function log() {
    echo -en "$GREEN"
    echo -n "$1"
    echo -e "$RESET"
}

log "Setting up environment"
DEPS="$PWD"
TEMP="$DEPS/temp"
rm -rf "$TEMP"
mkdir -p "$TEMP"
CFLAGS=$(echo "$DEFINES" | sed -e "/^\s*$/d" -e "s/^/-D/")
export CFLAGS

log "Downloading BearSSL"
curl "$BEARSSL_URL" > bearssl.tar.gz

log "Cloning SQLCipher..."
pushd "$TEMP"
git clone $SQLCIPHER_REPO -b "bearssl-crypto-provider-${SQLCIPHER_VERSION}"

log "Configuring amalgamation..."
mkdir -p sqlcipher/build "sqlcipher/build/sqlcipher-amalgamation-${SQLCIPHER_VERSION}"
pushd ./sqlcipher/build
../configure --with-crypto-lib=bearssl --enable-tempstore="yes"

log "Building amalgamation..."
make sqlite3.c
cp sqlite3.c sqlite3.h sqlite3ext.h "sqlcipher-amalgamation-${SQLCIPHER_VERSION}/"
cp ../VERSION "sqlcipher-amalgamation-${SQLCIPHER_VERSION}/VERSION.txt"
tar -czvf sqlcipher.tar.gz "sqlcipher-amalgamation-${SQLCIPHER_VERSION}"
popd
popd
mv "$TEMP/sqlcipher/build/sqlcipher.tar.gz" .

log "Writing GYP defines..."
GYP="$DEPS/defines.gypi"
printf "# THIS FILE IS AUTOMATICALLY GENERATED BY deps/download.sh (DO NOT EDIT)\n\n{\n  'defines': [\n" > "$GYP"
printf "$DEFINES" | sed -e "/^\s*$/d" -e "s/\(.*\)/    '\1',/" >> "$GYP"
printf "  ],\n}\n" >> "$GYP"

log "Cleaning up..."
rm -rf "$TEMP"

log "Done!"
